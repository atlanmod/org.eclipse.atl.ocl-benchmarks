query TestSortedByN = thisModule.takeFromSequence(thisModule.numTakeIn,thisModule.squares(257)
					->sortedBy(e|e));

helper def : numTakeIn : Integer = 
	Parameters!Parameter.allInstances()->select(e|e.name = 'TakeIn')->first().value
;

helper def : expensiveValue : Integer = 
	Parameters!Parameter.allInstances()->select(e|e.name = 'Expensive')->first().value
;

helper def : squares(end: Integer) : Set(Integer) =
	Parameters!Parameter.allInstances()
	->select(e|e.name = 'Squares')
	->first().list->subSequence(1,end)->asSet();
		
helper def : Numbers(end: Integer) : Set(Integer) =
	Parameters!Parameter.allInstances()
	->select(e|e.name = 'Naturals')
	->first().list->subSequence(1,end)->asSet();
		
helper def: take(n: Integer, seq: Set(Integer)) : Set(Integer) = 
	if(n = 1) then
		Set{1}
	else
		let prev:Set(Integer) = thisModule.take(n-1, seq) in
			prev->including(seq->any(x|prev->excludes(x)))
	endif;
	
helper def: takeFromSequence(n: Integer, seq: Sequence(Integer)) : Sequence(Integer) = 
	if(n = 1) then
		Sequence{1}
	else
		thisModule.takeFromSequence(n-1,seq)->including(seq->at(n))
	endif;

helper context Integer def : expensive() : Integer =
	thisModule.factorial(thisModule.expensiveValue)*thisModule.factorial(thisModule.expensiveValue);

helper def : factorial(val: Integer) : Integer =
	if(val = 1) then 
		1
	else
		val * thisModule.factorial(val-1)
	endif;